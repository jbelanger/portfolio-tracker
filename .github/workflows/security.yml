name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering of the workflow

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch full history for comprehensive scanning
        
    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        extra_args: --debug --only-verified

  dotnet-security:
    name: .NET Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      working-directory: backend
      run: dotnet restore
      
    - name: Check for vulnerable packages
      working-directory: backend
      run: |
        dotnet list package --vulnerable --include-transitive || echo "No vulnerable packages found"
        dotnet list package --deprecated || echo "No deprecated packages found"

  node-security:
    name: Node.js Security Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        path: ['frontend/web_next', 'frontend/portfolio-web']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.path }}/package-lock.json
        
    - name: Install dependencies
      working-directory: ${{ matrix.path }}
      run: npm ci
      
    - name: Run security audit
      working-directory: ${{ matrix.path }}
      run: npm audit --audit-level=moderate || echo "Security audit completed with warnings"

  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Setup .NET
      if: matrix.language == 'csharp'
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '8.0.x'
        
    - name: Build .NET projects
      if: matrix.language == 'csharp'
      working-directory: backend
      run: dotnet build --configuration Release
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"